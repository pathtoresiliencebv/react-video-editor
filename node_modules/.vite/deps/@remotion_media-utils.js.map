{
  "version": 3,
  "sources": ["../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/audio-buffer/audio-buffer-to-wav.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/audio-buffer/audio-url-helpers.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/is-remote-asset.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/p-limit.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/get-audio-data.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/media-tag-error-handling.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/get-audio-duration-in-seconds.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/get-image-dimensions.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/get-video-metadata.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/get-wave-form-samples.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/get-waveform-portion.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/types.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/use-audio-data.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/fft/complex.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/fft/exponent.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/fft/fft-accurate.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/fft/fft-fast.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/fft/mag.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/fft/smoothing.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/fft/to-int-16.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/fft/get-visualization.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/fft/max-value-cached.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/visualize-audio.js", "../../.pnpm/@remotion+media-utils@4.0.2_6e006f938b99d366f8d4a714c89f3dac/node_modules/@remotion/media-utils/dist/index.js"],
  "sourcesContent": ["\"use strict\";\n/**\n * Inlined from https://github.com/Jam3/audiobuffer-to-wav/commit/2272eb09bd46a05e50a6d684d908aa6f13c58f63#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.audioBufferToWav = audioBufferToWav;\nfunction interleave(inputL, inputR) {\n    const length = inputL.length + inputR.length;\n    const result = new Float32Array(length);\n    let index = 0;\n    let inputIndex = 0;\n    while (index < length) {\n        result[index++] = inputL[inputIndex];\n        result[index++] = inputR[inputIndex];\n        inputIndex++;\n    }\n    return result;\n}\nfunction writeFloat32(output, offset, input) {\n    for (let i = 0; i < input.length; i++, offset += 4) {\n        output.setFloat32(offset, input[i], true);\n    }\n}\nfunction floatTo16BitPCM(output, offset, input) {\n    for (let i = 0; i < input.length; i++, offset += 2) {\n        const s = Math.max(-1, Math.min(1, input[i]));\n        output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n    }\n}\nfunction writeString(view, offset, string) {\n    for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n    }\n}\nfunction encodeWAV({ samples, format, sampleRate, numChannels, bitDepth, }) {\n    const bytesPerSample = bitDepth / 8;\n    const blockAlign = numChannels * bytesPerSample;\n    const buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n    const view = new DataView(buffer);\n    /* RIFF identifier */\n    writeString(view, 0, 'RIFF');\n    /* RIFF chunk length */\n    view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n    /* RIFF type */\n    writeString(view, 8, 'WAVE');\n    /* format chunk identifier */\n    writeString(view, 12, 'fmt ');\n    /* format chunk length */\n    view.setUint32(16, 16, true);\n    /* sample format (raw) */\n    view.setUint16(20, format, true);\n    /* channel count */\n    view.setUint16(22, numChannels, true);\n    /* sample rate */\n    view.setUint32(24, sampleRate, true);\n    /* byte rate (sample rate * block align) */\n    view.setUint32(28, sampleRate * blockAlign, true);\n    /* block align (channel count * bytes per sample) */\n    view.setUint16(32, blockAlign, true);\n    /* bits per sample */\n    view.setUint16(34, bitDepth, true);\n    /* data chunk identifier */\n    writeString(view, 36, 'data');\n    /* data chunk length */\n    view.setUint32(40, samples.length * bytesPerSample, true);\n    if (format === 1) {\n        // Raw PCM\n        floatTo16BitPCM(view, 44, samples);\n    }\n    else {\n        writeFloat32(view, 44, samples);\n    }\n    return buffer;\n}\nfunction audioBufferToWav(buffer, opt) {\n    const numChannels = buffer.numberOfChannels;\n    const { sampleRate } = buffer;\n    const format = opt.float32 ? 3 : 1;\n    const bitDepth = format === 3 ? 32 : 16;\n    let result;\n    if (numChannels === 2) {\n        result = interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n    }\n    else {\n        result = buffer.getChannelData(0);\n    }\n    return encodeWAV({\n        samples: result,\n        format,\n        sampleRate,\n        numChannels,\n        bitDepth,\n    });\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.audioBufferToDataUrl = void 0;\nconst audio_buffer_to_wav_1 = require(\"./audio-buffer-to-wav\");\n/**\n * @description This API takes an AudioBuffer instance and converts it to a Base 64 Data URL so it can be passed to an <Audio /> tag.\n * @see [Documentation](https://www.remotion.dev/docs/audio-buffer-to-data-url)\n */\nconst audioBufferToDataUrl = (buffer) => {\n    const wavAsArrayBuffer = (0, audio_buffer_to_wav_1.audioBufferToWav)(buffer, {\n        float32: true,\n    });\n    let binary = '';\n    const bytes = new Uint8Array(wavAsArrayBuffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return 'data:audio/wav;base64,' + window.btoa(binary);\n};\nexports.audioBufferToDataUrl = audioBufferToDataUrl;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isRemoteAsset = void 0;\nconst isRemoteAsset = (asset) => !asset.startsWith(window.origin) && !asset.startsWith('data');\nexports.isRemoteAsset = isRemoteAsset;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pLimit = void 0;\nconst pLimit = (concurrency) => {\n    const queue = [];\n    let activeCount = 0;\n    const next = () => {\n        var _a;\n        activeCount--;\n        if (queue.length > 0) {\n            (_a = queue.shift()) === null || _a === void 0 ? void 0 : _a();\n        }\n    };\n    const run = async (fn, resolve, ...args) => {\n        activeCount++;\n        // eslint-disable-next-line require-await\n        const result = (async () => fn(...args))();\n        resolve(result);\n        try {\n            await result;\n        }\n        catch (_a) { }\n        next();\n    };\n    const enqueue = (fn, resolve, ...args) => {\n        queue.push(() => run(fn, resolve, ...args));\n        (async () => {\n            var _a;\n            // This function needs to wait until the next microtask before comparing\n            // `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n            // when the run function is dequeued and called. The comparison in the if-statement\n            // needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n            await Promise.resolve();\n            if (activeCount < concurrency && queue.length > 0) {\n                (_a = queue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        })();\n    };\n    const generator = (fn, ...args) => new Promise((resolve) => {\n        enqueue(fn, resolve, ...args);\n    });\n    Object.defineProperties(generator, {\n        activeCount: {\n            get: () => activeCount,\n        },\n        pendingCount: {\n            get: () => queue.length,\n        },\n        clearQueue: {\n            value: () => {\n                queue.length = 0;\n            },\n        },\n    });\n    return generator;\n};\nexports.pLimit = pLimit;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAudioData = void 0;\nconst is_remote_asset_1 = require(\"./is-remote-asset\");\nconst p_limit_1 = require(\"./p-limit\");\nconst metadataCache = {};\nconst limit = (0, p_limit_1.pLimit)(3);\nconst fetchWithCorsCatch = async (src) => {\n    try {\n        const response = await fetch(src, {\n            mode: 'cors',\n            referrerPolicy: 'no-referrer-when-downgrade',\n        });\n        return response;\n    }\n    catch (err) {\n        const error = err;\n        if (\n        // Chrome\n        error.message.includes('Failed to fetch') ||\n            // Safari\n            error.message.includes('Load failed') ||\n            // Firefox\n            error.message.includes('NetworkError when attempting to fetch resource')) {\n            throw new TypeError(`Failed to read from ${src}: ${error.message}. Does the resource support CORS?`);\n        }\n        throw err;\n    }\n};\nconst fn = async (src, options) => {\n    var _a;\n    if (metadataCache[src]) {\n        return metadataCache[src];\n    }\n    if (typeof document === 'undefined') {\n        throw new Error('getAudioData() is only available in the browser.');\n    }\n    const audioContext = new AudioContext({\n        sampleRate: (_a = options === null || options === void 0 ? void 0 : options.sampleRate) !== null && _a !== void 0 ? _a : 48000,\n    });\n    const response = await fetchWithCorsCatch(src);\n    const arrayBuffer = await response.arrayBuffer();\n    const wave = await audioContext.decodeAudioData(arrayBuffer);\n    const channelWaveforms = new Array(wave.numberOfChannels)\n        .fill(true)\n        .map((_, channel) => {\n        return wave.getChannelData(channel);\n    });\n    const metadata = {\n        channelWaveforms,\n        sampleRate: wave.sampleRate,\n        durationInSeconds: wave.duration,\n        numberOfChannels: wave.numberOfChannels,\n        resultId: String(Math.random()),\n        isRemote: (0, is_remote_asset_1.isRemoteAsset)(src),\n    };\n    metadataCache[src] = metadata;\n    return metadata;\n};\n/**\n * @description Takes an audio src, loads it and returns data and metadata for the specified source.\n * @see [Documentation](https://www.remotion.dev/docs/get-audio-data)\n */\nconst getAudioData = (src, options) => {\n    return limit(fn, src, options);\n};\nexports.getAudioData = getAudioData;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onMediaError = void 0;\nasync function fetchWithTimeout(url, options, timeout = 3000) {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeout);\n    options.signal = controller.signal;\n    try {\n        const response = await fetch(url, options);\n        clearTimeout(id);\n        return response;\n    }\n    catch (e) {\n        clearTimeout(id);\n        throw new Error(`Fetch timed out after ${timeout}ms`);\n    }\n}\nconst checkFor404 = (src) => {\n    return fetchWithTimeout(src, {\n        method: 'HEAD',\n        mode: 'no-cors',\n    }).then((res) => res.status);\n};\nconst checkFor404OrSkip = async ({ suspecting404, sameOrigin, src, }) => {\n    if (!suspecting404) {\n        return Promise.resolve(null);\n    }\n    if (!sameOrigin) {\n        return Promise.resolve(null);\n    }\n    try {\n        return await checkFor404(src);\n    }\n    catch (e) {\n        return Promise.resolve(null);\n    }\n};\nconst onMediaError = ({ error, src, reject, cleanup, api, }) => {\n    const suspecting404 = error.MEDIA_ERR_SRC_NOT_SUPPORTED === error.code;\n    const isSrcSameOriginAsCurrent = new URL(src, window.location.origin)\n        .toString()\n        .startsWith(window.location.origin);\n    checkFor404OrSkip({\n        suspecting404,\n        sameOrigin: isSrcSameOriginAsCurrent,\n        src,\n    })\n        .then((status) => {\n        const err = status === 404\n            ? new Error([\n                `Failed to execute ${api}: Received a 404 error loading \"${src}\".`,\n                'Correct the URL of the file.',\n            ].join(' '))\n            : new Error([\n                `Failed to execute ${api}, Received a MediaError loading \"${src}\".`,\n                status === null\n                    ? null\n                    : `HTTP Status code of the file: ${status}.`,\n                error.message\n                    ? `Browser error message: ${error.message}`\n                    : null,\n                'Check the path of the file and if it is a valid video.',\n            ]\n                .filter(Boolean)\n                .join(' '));\n        reject(err);\n        cleanup();\n    })\n        .catch((e) => {\n        reject(e);\n        cleanup();\n    });\n};\nexports.onMediaError = onMediaError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAudioDuration = exports.getAudioDurationInSeconds = void 0;\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst media_tag_error_handling_1 = require(\"./media-tag-error-handling\");\nconst p_limit_1 = require(\"./p-limit\");\nconst limit = (0, p_limit_1.pLimit)(3);\nconst metadataCache = {};\nconst fn = (src) => {\n    if (metadataCache[src]) {\n        return Promise.resolve(metadataCache[src]);\n    }\n    if (typeof document === 'undefined') {\n        throw new Error('getAudioDuration() is only available in the browser.');\n    }\n    const audio = document.createElement('audio');\n    audio.src = src;\n    return new Promise((resolve, reject) => {\n        const onError = () => {\n            (0, media_tag_error_handling_1.onMediaError)({\n                error: audio.error,\n                src,\n                cleanup,\n                reject,\n                api: 'getAudioDurationInSeconds()',\n            });\n        };\n        const onLoadedMetadata = () => {\n            metadataCache[src] = audio.duration;\n            resolve(audio.duration);\n            cleanup();\n        };\n        const cleanup = () => {\n            audio.removeEventListener('loadedmetadata', onLoadedMetadata);\n            audio.removeEventListener('error', onError);\n            audio.remove();\n        };\n        audio.addEventListener('loadedmetadata', onLoadedMetadata, { once: true });\n        audio.addEventListener('error', onError, { once: true });\n    });\n};\n/**\n * @default Get the audio file passed in parameter duration in seconds\n * @async\n * @param src path to the audio file\n * @return {number} duration of the audio file in seconds\n * @see [Documentation](https://www.remotion.dev/docs/get-audio-duration-in-seconds)\n */\nconst getAudioDurationInSeconds = (src) => {\n    return limit(fn, src);\n};\nexports.getAudioDurationInSeconds = getAudioDurationInSeconds;\n/**\n * @deprecated Renamed to `getAudioDurationInSeconds`\n */\nconst getAudioDuration = (src) => (0, exports.getAudioDurationInSeconds)(src);\nexports.getAudioDuration = getAudioDuration;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getImageDimensions = getImageDimensions;\nconst p_limit_1 = require(\"./p-limit\");\nconst imageDimensionsCache = {};\nconst limit = (0, p_limit_1.pLimit)(3);\nconst fn = async (src) => {\n    if (imageDimensionsCache[src]) {\n        return imageDimensionsCache[src];\n    }\n    if (typeof document === 'undefined') {\n        throw new Error('getImageDimensions() is only available in the browser.');\n    }\n    const imageDimensions = await new Promise((resolved, reject) => {\n        const image = new Image();\n        image.onload = () => {\n            const { width, height } = image;\n            resolved({ width, height });\n        };\n        image.onerror = reject;\n        image.src = src;\n    });\n    imageDimensionsCache[src] = imageDimensions;\n    return imageDimensions;\n};\n/**\n * @description Takes an image src, retrieves the dimensions of an image.\n * @see [Documentation](https://www.remotion.dev/docs/get-image-dimensions)\n */\nfunction getImageDimensions(src) {\n    return limit(fn, src);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getVideoMetadata = void 0;\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst is_remote_asset_1 = require(\"./is-remote-asset\");\nconst media_tag_error_handling_1 = require(\"./media-tag-error-handling\");\nconst p_limit_1 = require(\"./p-limit\");\nconst cache = {};\nconst limit = (0, p_limit_1.pLimit)(3);\nconst fn = (src) => {\n    if (cache[src]) {\n        return Promise.resolve(cache[src]);\n    }\n    if (typeof document === 'undefined') {\n        throw new Error('getVideoMetadata() is only available in the browser.');\n    }\n    const video = document.createElement('video');\n    video.src = src;\n    return new Promise((resolve, reject) => {\n        const onError = () => {\n            (0, media_tag_error_handling_1.onMediaError)({\n                error: video.error,\n                src,\n                cleanup,\n                reject,\n                api: 'getVideoMetadata()',\n            });\n        };\n        const onLoadedMetadata = () => {\n            const pixels = video.videoHeight * video.videoWidth;\n            if (pixels === 0) {\n                reject(new Error(`Unable to determine video metadata for ${src}`));\n                return;\n            }\n            if (!Number.isFinite(video.duration)) {\n                reject(new Error(`Unable to determine video duration for ${src} - got Infinity. Re-encoding this video may fix this issue.`));\n                return;\n            }\n            const metadata = {\n                durationInSeconds: video.duration,\n                width: video.videoWidth,\n                height: video.videoHeight,\n                aspectRatio: video.videoWidth / video.videoHeight,\n                isRemote: (0, is_remote_asset_1.isRemoteAsset)(src),\n            };\n            resolve(metadata);\n            cache[src] = metadata;\n            cleanup();\n        };\n        const cleanup = () => {\n            video.removeEventListener('loadedmetadata', onLoadedMetadata);\n            video.removeEventListener('error', onError);\n            video.remove();\n        };\n        video.addEventListener('loadedmetadata', onLoadedMetadata, { once: true });\n        video.addEventListener('error', onError, { once: true });\n    });\n};\n/**\n * @description Takes a src to a video, loads it and returns metadata for the specified source.\n * @see [Documentation](https://www.remotion.dev/docs/get-video-metadata)\n */\nconst getVideoMetadata = (src) => {\n    return limit(fn, src);\n};\nexports.getVideoMetadata = getVideoMetadata;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWaveformSamples = void 0;\nconst filterData = (audioBuffer, samples) => {\n    const blockSize = Math.floor(audioBuffer.length / samples); // the number of samples in each subdivision\n    if (blockSize === 0) {\n        return [];\n    }\n    const filteredData = [];\n    for (let i = 0; i < samples; i++) {\n        const blockStart = blockSize * i; // the location of the first sample in the block\n        let sum = 0;\n        for (let j = 0; j < blockSize; j++) {\n            sum += Math.abs(audioBuffer[blockStart + j]); // find the sum of all the samples in the block\n        }\n        filteredData.push(sum / blockSize); // divide the sum by the block size to get the average\n    }\n    return filteredData;\n};\nconst normalizeData = (filteredData) => {\n    const multiplier = Math.max(...filteredData) ** -1;\n    return filteredData.map((n) => n * multiplier);\n};\nconst getWaveformSamples = (waveform, sampleAmount) => {\n    return normalizeData(filterData(waveform, sampleAmount));\n};\nexports.getWaveformSamples = getWaveformSamples;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWaveformPortion = void 0;\nconst get_wave_form_samples_1 = require(\"./get-wave-form-samples\");\n/**\n * @description Takes bulky waveform data (for example fetched by getAudioData()) and returns a trimmed and simplified version of it, for simpler visualization\n * @see [Documentation](https://www.remotion.dev/docs/get-waveform-portion)\n */\nconst getWaveformPortion = ({ audioData, startTimeInSeconds, durationInSeconds, numberOfSamples, }) => {\n    const startSample = Math.floor((startTimeInSeconds / audioData.durationInSeconds) *\n        audioData.channelWaveforms[0].length);\n    const endSample = Math.floor(((startTimeInSeconds + durationInSeconds) / audioData.durationInSeconds) *\n        audioData.channelWaveforms[0].length);\n    return (0, get_wave_form_samples_1.getWaveformSamples)(audioData.channelWaveforms[0].slice(startSample, endSample), numberOfSamples).map((w, i) => {\n        return {\n            index: i,\n            amplitude: w,\n        };\n    });\n};\nexports.getWaveformPortion = getWaveformPortion;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useAudioData = void 0;\nconst react_1 = require(\"react\");\nconst remotion_1 = require(\"remotion\");\nconst get_audio_data_1 = require(\"./get-audio-data\");\n/**\n * @description Wraps the getAudioData() function into a hook and does 3 things:\n * @description Keeps the audio data in a state\n * @description Wraps the function in a delayRender() / continueRender() pattern.\n * @description Handles the case where the component gets unmounted while the fetching is in progress and a React error is thrown.\n * @see [Documentation](https://www.remotion.dev/docs/use-audio-data)\n */\nconst useAudioData = (src) => {\n    if (!src) {\n        throw new TypeError(\"useAudioData requires a 'src' parameter\");\n    }\n    const mountState = (0, react_1.useRef)({ isMounted: true });\n    (0, react_1.useEffect)(() => {\n        const { current } = mountState;\n        current.isMounted = true;\n        return () => {\n            current.isMounted = false;\n        };\n    }, []);\n    const [metadata, setMetadata] = (0, react_1.useState)(null);\n    const fetchMetadata = (0, react_1.useCallback)(async () => {\n        const handle = (0, remotion_1.delayRender)(`Waiting for audio metadata with src=\"${src}\" to be loaded`);\n        try {\n            const data = await (0, get_audio_data_1.getAudioData)(src);\n            if (mountState.current.isMounted) {\n                setMetadata(data);\n            }\n        }\n        catch (err) {\n            (0, remotion_1.cancelRender)(err);\n        }\n        (0, remotion_1.continueRender)(handle);\n    }, [src]);\n    (0, react_1.useLayoutEffect)(() => {\n        fetchMetadata();\n    }, [fetchMetadata]);\n    return metadata;\n};\nexports.useAudioData = useAudioData;\n", "\"use strict\";\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.complexMagnitude = exports.complexMultiply = exports.complexSubtract = exports.complexAdd = void 0;\nconst complexAdd = function (a, b) {\n    return [a[0] + b[0], a[1] + b[1]];\n};\nexports.complexAdd = complexAdd;\nconst complexSubtract = function (a, b) {\n    return [a[0] - b[0], a[1] - b[1]];\n};\nexports.complexSubtract = complexSubtract;\nconst complexMultiply = function (a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n};\nexports.complexMultiply = complexMultiply;\nconst complexMagnitude = function (c) {\n    return Math.sqrt(c[0] * c[0] + c[1] * c[1]);\n};\nexports.complexMagnitude = complexMagnitude;\n", "\"use strict\";\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exponent = void 0;\nconst mapExponent = {};\nconst exponent = function (k, N) {\n    const x = -2 * Math.PI * (k / N);\n    mapExponent[N] = mapExponent[N] || {};\n    mapExponent[N][k] = mapExponent[N][k] || [Math.cos(x), Math.sin(x)]; // [Real, Imaginary]\n    return mapExponent[N][k];\n};\nexports.exponent = exponent;\n", "\"use strict\";\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fftAccurate = void 0;\nconst complex_1 = require(\"./complex\");\nconst exponent_1 = require(\"./exponent\");\nconst fftAccurate = function (vector) {\n    const X = [];\n    const N = vector.length;\n    // Base case is X = x + 0i since our input is assumed to be real only.\n    if (N === 1) {\n        if (Array.isArray(vector[0])) {\n            // If input vector contains complex numbers\n            return [[vector[0][0], vector[0][1]]];\n        }\n        return [[vector[0], 0]];\n    }\n    // Recurse: all even samples\n    const X_evens = (0, exports.fftAccurate)(vector.filter((_, ix) => ix % 2 === 0));\n    // Recurse: all odd samples\n    const X_odds = (0, exports.fftAccurate)(vector.filter((__, ix) => ix % 2 === 1));\n    // Now, perform N/2 operations!\n    for (let k = 0; k < N / 2; k++) {\n        // t is a complex number!\n        const t = X_evens[k];\n        const e = (0, complex_1.complexMultiply)((0, exponent_1.exponent)(k, N), X_odds[k]);\n        X[k] = (0, complex_1.complexAdd)(t, e);\n        X[k + N / 2] = (0, complex_1.complexSubtract)(t, e);\n    }\n    return X;\n};\nexports.fftAccurate = fftAccurate;\n", "\"use strict\";\n// https://pastebin.com/raw/D42RbPe5\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fftFast = void 0;\n// Function to reverse bits in an integer\nfunction reverseBits(num, numBits) {\n    let result = 0;\n    for (let i = 0; i < numBits; i++) {\n        result = (result << 1) | ((num >> i) & 1);\n    }\n    return result;\n}\n// Hamming window function\nfunction hammingWindow(N) {\n    const win = new Array(N);\n    for (let i = 0; i < N; i++) {\n        win[i] = 0.8 - 0.46 * Math.cos((2 * Math.PI * i) / (N - 1));\n    }\n    return win;\n}\n// Function to calculate the bit-reversed permutation indices\nfunction bitReversePermutation(N) {\n    const bitReversed = new Array(N);\n    for (let i = 0; i < N; i++) {\n        bitReversed[i] = reverseBits(i, Math.log2(N));\n    }\n    return bitReversed;\n}\nconst fftFast = function (vector) {\n    const N = vector.length;\n    const X = new Array(N);\n    if (N <= 1) {\n        for (let i = 0; i < vector.length; i++) {\n            const value = vector[i];\n            X[i] = [value * 2, 0];\n        }\n        return X;\n    }\n    // Apply a windowing function to the input data\n    const window = hammingWindow(N); // You can choose a different window function if needed\n    for (let i = 0; i < N; i++) {\n        X[i] = [vector[i] * window[i], 0];\n    }\n    // Bit-Reversal Permutation\n    const bitReversed = bitReversePermutation(N);\n    for (let i = 0; i < N; i++) {\n        X[i] = [vector[bitReversed[i]], 0];\n    }\n    // Cooley-Tukey FFT\n    for (let s = 1; s <= Math.log2(N); s++) {\n        const m = 1 << s; // Number of elements in each subarray\n        const mHalf = m / 2; // Half the number of elements in each subarray\n        const angleIncrement = (2 * Math.PI) / m;\n        for (let k = 0; k < N; k += m) {\n            let omegaReal = 1.0;\n            let omegaImag = 0.0;\n            for (let j = 0; j < mHalf; j++) {\n                const tReal = omegaReal * X[k + j + mHalf][0] - omegaImag * X[k + j + mHalf][1];\n                const tImag = omegaReal * X[k + j + mHalf][1] + omegaImag * X[k + j + mHalf][0];\n                const uReal = X[k + j][0];\n                const uImag = X[k + j][1];\n                X[k + j] = [uReal + tReal, uImag + tImag];\n                X[k + j + mHalf] = [uReal - tReal, uImag - tImag];\n                // Twiddle factor update\n                const tempReal = omegaReal * Math.cos(angleIncrement) -\n                    omegaImag * Math.sin(angleIncrement);\n                omegaImag =\n                    omegaReal * Math.sin(angleIncrement) +\n                        omegaImag * Math.cos(angleIncrement);\n                omegaReal = tempReal;\n            }\n        }\n    }\n    return X;\n};\nexports.fftFast = fftFast;\n", "\"use strict\";\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fftMag = void 0;\nconst complex_1 = require(\"./complex\");\nconst fftMag = function (fftBins) {\n    const ret = fftBins.map((f) => (0, complex_1.complexMagnitude)(f));\n    return ret.slice(0, ret.length / 2);\n};\nexports.fftMag = fftMag;\n", "\"use strict\";\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.smoothen = void 0;\nconst smoothingPasses = 3;\nconst smoothingPoints = 3;\nconst smoothen = function (array) {\n    let lastArray = array;\n    const newArr = [];\n    for (let pass = 0; pass < smoothingPasses; pass++) {\n        const sidePoints = Math.floor(smoothingPoints / 2); // our window is centered so this is both nL and nR\n        const cn = 1 / (2 * sidePoints + 1); // constant\n        for (let i = 0; i < sidePoints; i++) {\n            newArr[i] = lastArray[i];\n            newArr[lastArray.length - i - 1] = lastArray[lastArray.length - i - 1];\n        }\n        for (let i = sidePoints; i < lastArray.length - sidePoints; i++) {\n            let sum = 0;\n            for (let n = -sidePoints; n <= sidePoints; n++) {\n                sum += cn * lastArray[i + n] + n;\n            }\n            newArr[i] = sum;\n        }\n        lastArray = newArr;\n    }\n    return newArr;\n};\nexports.smoothen = smoothen;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toInt16 = void 0;\nconst toInt16 = (x) => (x > 0 ? x * 0x7fff : x * 0x8000);\nexports.toInt16 = toInt16;\n", "\"use strict\";\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getVisualization = void 0;\nconst fft_accurate_1 = require(\"./fft-accurate\");\nconst fft_fast_1 = require(\"./fft-fast\");\nconst mag_1 = require(\"./mag\");\nconst smoothing_1 = require(\"./smoothing\");\nconst to_int_16_1 = require(\"./to-int-16\");\nconst getVisualization = ({ sampleSize, data, sampleRate, frame, fps, maxInt, optimizeFor = 'accuracy', }) => {\n    const isPowerOfTwo = sampleSize > 0 && (sampleSize & (sampleSize - 1)) === 0;\n    if (!isPowerOfTwo) {\n        throw new TypeError(`The argument \"bars\" must be a power of two. For example: 64, 128. Got instead: ${sampleSize}`);\n    }\n    if (!fps) {\n        throw new TypeError('The argument \"fps\" was not provided');\n    }\n    if (data.length < sampleSize) {\n        throw new TypeError('Audio data is not big enough to provide ' + sampleSize + ' bars.');\n    }\n    const start = Math.floor((frame / fps) * sampleRate);\n    const actualStart = Math.max(0, start - sampleSize / 2);\n    const ints = new Int16Array({\n        length: sampleSize,\n    });\n    ints.set(data.subarray(actualStart, actualStart + sampleSize).map((x) => (0, to_int_16_1.toInt16)(x)));\n    const alg = optimizeFor === 'accuracy' ? fft_accurate_1.fftAccurate : fft_fast_1.fftFast;\n    const phasors = alg(ints);\n    const magnitudes = (0, mag_1.fftMag)(phasors).map((p) => p);\n    return (0, smoothing_1.smoothen)(magnitudes).map((m) => m / (sampleSize / 2) / maxInt);\n};\nexports.getVisualization = getVisualization;\n", "\"use strict\";\n// Adapted from node-fft project by Joshua Wong and Ben Bryan\n// https://github.com/vail-systems/node-fft\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMaxPossibleMagnitude = void 0;\nconst to_int_16_1 = require(\"./to-int-16\");\nconst getMax = (array) => {\n    let max = 0;\n    for (let i = 0; i < array.length; i++) {\n        const val = array[i];\n        if (val > max) {\n            max = val;\n        }\n    }\n    return max;\n};\nconst cache = {};\nconst getMaxPossibleMagnitude = (metadata) => {\n    if (cache[metadata.resultId]) {\n        return cache[metadata.resultId];\n    }\n    const result = (0, to_int_16_1.toInt16)(getMax(metadata.channelWaveforms[0]));\n    cache[metadata.resultId] = result;\n    return result;\n};\nexports.getMaxPossibleMagnitude = getMaxPossibleMagnitude;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.visualizeAudio = void 0;\nconst no_react_1 = require(\"remotion/no-react\");\nconst get_visualization_1 = require(\"./fft/get-visualization\");\nconst max_value_cached_1 = require(\"./fft/max-value-cached\");\nconst cache = {};\n/**\n * @description Takes in AudioData (preferably fetched by the useAudioData() hook) and processes it in a way that makes visualizing the audio that is playing at the current frame easy.\n * @description part of @remotion/media-utils\n * @see [Documentation](https://www.remotion.dev/docs/visualize-audio)\n */\nconst visualizeAudioFrame = ({ audioData: metadata, frame, fps, numberOfSamples, optimizeFor, }) => {\n    const cacheKey = metadata.resultId + frame + fps + numberOfSamples;\n    if (cache[cacheKey]) {\n        return cache[cacheKey];\n    }\n    const maxInt = (0, max_value_cached_1.getMaxPossibleMagnitude)(metadata);\n    return (0, get_visualization_1.getVisualization)({\n        sampleSize: numberOfSamples * 2,\n        data: metadata.channelWaveforms[0],\n        frame,\n        fps,\n        sampleRate: metadata.sampleRate,\n        maxInt,\n        optimizeFor: optimizeFor !== null && optimizeFor !== void 0 ? optimizeFor : (no_react_1.NoReactInternals.ENABLE_V5_BREAKING_CHANGES ? 'speed' : 'accuracy'),\n    });\n};\nconst visualizeAudio = ({ smoothing = true, ...parameters }) => {\n    if (!smoothing) {\n        return visualizeAudioFrame(parameters);\n    }\n    const toSmooth = [\n        parameters.frame - 1,\n        parameters.frame,\n        parameters.frame + 1,\n    ];\n    const all = toSmooth.map((s) => {\n        return visualizeAudioFrame({ ...parameters, frame: s });\n    });\n    return new Array(parameters.numberOfSamples).fill(true).map((_x, i) => {\n        return (new Array(toSmooth.length)\n            .fill(true)\n            .map((_, j) => {\n            return all[j][i];\n        })\n            .reduce((a, b) => a + b, 0) / toSmooth.length);\n    });\n};\nexports.visualizeAudio = visualizeAudio;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.visualizeAudio = exports.useAudioData = exports.getWaveformPortion = exports.getVideoMetadata = exports.getImageDimensions = exports.getAudioDurationInSeconds = exports.getAudioDuration = exports.getAudioData = exports.audioBufferToDataUrl = void 0;\nvar audio_url_helpers_1 = require(\"./audio-buffer/audio-url-helpers\");\nObject.defineProperty(exports, \"audioBufferToDataUrl\", { enumerable: true, get: function () { return audio_url_helpers_1.audioBufferToDataUrl; } });\nvar get_audio_data_1 = require(\"./get-audio-data\");\nObject.defineProperty(exports, \"getAudioData\", { enumerable: true, get: function () { return get_audio_data_1.getAudioData; } });\nvar get_audio_duration_in_seconds_1 = require(\"./get-audio-duration-in-seconds\");\nObject.defineProperty(exports, \"getAudioDuration\", { enumerable: true, get: function () { return get_audio_duration_in_seconds_1.getAudioDuration; } });\nObject.defineProperty(exports, \"getAudioDurationInSeconds\", { enumerable: true, get: function () { return get_audio_duration_in_seconds_1.getAudioDurationInSeconds; } });\nvar get_image_dimensions_1 = require(\"./get-image-dimensions\");\nObject.defineProperty(exports, \"getImageDimensions\", { enumerable: true, get: function () { return get_image_dimensions_1.getImageDimensions; } });\nvar get_video_metadata_1 = require(\"./get-video-metadata\");\nObject.defineProperty(exports, \"getVideoMetadata\", { enumerable: true, get: function () { return get_video_metadata_1.getVideoMetadata; } });\nvar get_waveform_portion_1 = require(\"./get-waveform-portion\");\nObject.defineProperty(exports, \"getWaveformPortion\", { enumerable: true, get: function () { return get_waveform_portion_1.getWaveformPortion; } });\n__exportStar(require(\"./types\"), exports);\nvar use_audio_data_1 = require(\"./use-audio-data\");\nObject.defineProperty(exports, \"useAudioData\", { enumerable: true, get: function () { return use_audio_data_1.useAudioData; } });\nvar visualize_audio_1 = require(\"./visualize-audio\");\nObject.defineProperty(exports, \"visualizeAudio\", { enumerable: true, get: function () { return visualize_audio_1.visualizeAudio; } });\n"],
  "mappings": "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",
  "names": ["window", "exports"]
}
