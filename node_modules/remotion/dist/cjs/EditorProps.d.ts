import React from 'react';
type Props = Record<string, Record<string, unknown>>;
export type EditorPropsContextType = {
    props: Props;
    updateProps: (options: {
        id: string;
        defaultProps: Record<string, unknown>;
        newProps: Record<string, unknown> | ((oldProps: Record<string, unknown>) => Record<string, unknown>);
    }) => void;
    resetUnsaved: () => void;
};
export declare const EditorPropsContext: React.Context<EditorPropsContextType>;
export declare const editorPropsProviderRef: React.RefObject<{
    getProps: () => Props;
    setProps: React.Dispatch<React.SetStateAction<Props>>;
}>;
export declare const EditorPropsProvider: React.FC<{
    readonly children: React.ReactNode;
}>;
export {};
