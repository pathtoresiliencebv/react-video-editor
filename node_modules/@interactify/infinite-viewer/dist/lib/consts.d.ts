export declare const agent: import('@egjs/agent').AgentInfo;
export declare const IS_SAFARI: boolean;
export declare const PREFIX = "infinite-viewer-";
export declare const WRAPPER_CLASS_NAME = "infinite-viewer-wrapper";
export declare const SCROLL_AREA_CLASS_NAME = "infinite-viewer-scroll-area";
export declare const SCROLL_BAR_CLASS_NAME = "infinite-viewer-scroll-bar";
export declare const HORIZONTAL_SCROLL_BAR_CLASS_NAME = "infinite-viewer-horizontal-scroll-bar";
export declare const VERTICAL_SCROLL_BAR_CLASS_NAME = "infinite-viewer-vertical-scroll-bar";
export declare const SCROLL_THUMB_CLASS_NAME = "infinite-viewer-scroll-thumb";
export declare const injector: import('css-styled').StyledInjector;
export declare const DEFAULT_OPTIONS: {
    margin: number;
    threshold: number;
    zoom: number;
    zoomX: number;
    zoomY: number;
    rangeX: number[];
    rangeY: number[];
    rangeOffsetX: number[];
    rangeOffsetY: number[];
    wrapperElement: any;
    scrollAreaElement: any;
    horizontalScrollElement: any;
    verticalScrollElement: any;
    usePinch: boolean;
    useAutoZoom: boolean;
    useMouseDrag: boolean;
    pinchThreshold: number;
    cspNonce: string;
    maxPinchWheel: number;
    wheelScale: number;
    displayHorizontalScroll: boolean;
    displayVerticalScroll: boolean;
    useTransform: boolean;
    useWheelPinch: boolean;
    zoomRange: number[];
    wheelPinchKey: "ctrl";
    useWheelScroll: boolean;
    zoomOffsetX: string;
    zoomOffsetY: string;
    translateZ: number;
    useGesture: boolean;
    useResizeObserver: boolean;
    pinchDirection: "all";
    preventWheelClick: boolean;
    useBounceScrollBar: boolean;
    useOverflowScroll: boolean;
};
export declare const DEFAULT_EASING: (x: number) => number;
export declare const NAMES: {
    readonly horizontal: {
        readonly pos: "Left";
        readonly coord: "X";
        readonly size: "Width";
    };
    readonly vertical: {
        readonly pos: "Top";
        readonly coord: "Y";
        readonly size: "Height";
    };
};
/**
 * @memberof InfiniteViewer
 */
export declare const CLASS_NAME: string;
/**
 * @memberof InfiniteViewer
 */
export declare const PROPERTIES: readonly ["margin", "threshold", "zoomOffsetX", "zoomOffsetY", "zoom", "zoomX", "zoomY", "rangeX", "rangeY", "rangeOffsetX", "rangeOffsetY", "usePinch", "useMouseDrag", "pinchThreshold", "maxPinchWheel", "wheelScale", "displayVerticalScroll", "displayHorizontalScroll", "translateZ", "useAutoZoom", "wheelPinchKey", "zoomRange", "zoomRangeX", "zoomRangeY", "pinchDirection", "useOverflowScroll"];
/**
 * @memberof InfiniteViewer
 */
export declare const OPTIONS: readonly ["margin", "threshold", "zoomOffsetX", "zoomOffsetY", "zoom", "zoomX", "zoomY", "rangeX", "rangeY", "rangeOffsetX", "rangeOffsetY", "usePinch", "useMouseDrag", "pinchThreshold", "maxPinchWheel", "wheelScale", "displayVerticalScroll", "displayHorizontalScroll", "translateZ", "useAutoZoom", "wheelPinchKey", "zoomRange", "zoomRangeX", "zoomRangeY", "pinchDirection", "useOverflowScroll", "preventWheelClick", "useWheelPinch", "useWheelScroll", "useGesture", "cspNonce", "wrapperElement", "scrollAreaElement", "verticalScrollElement", "horizontalScrollElement", "useResizeObserver", "wheelContainer", "useBounceScrollBar"];
/**
 * @memberof InfiniteViewer
 */
export declare const EVENTS: readonly ["scroll", "abortPinch", "dragStart", "dragEnd", "pinchStart", "pinch"];
/**
 * @memberof InfiniteViewer
 */
export declare const METHODS: readonly ["getScrollLeft", "getScrollTop", "getScrollWidth", "getScrollHeight", "getContainerWidth", "getContainerHeight", "getViewportWidth", "getViewportHeight", "getViewportScrollWidth", "getViewportScrollHeight", "scrollTo", "scrollBy", "zoomBy", "scrollCenter", "getContainer", "getViewport", "getWrapper", "setZoom", "getRangeX", "getRangeY", "resize", "getZoom", "getZoomX", "getZoomY", "getWheelContainer", "setTo", "setBy"];
export declare const TINY_NUM = 0.000001;
