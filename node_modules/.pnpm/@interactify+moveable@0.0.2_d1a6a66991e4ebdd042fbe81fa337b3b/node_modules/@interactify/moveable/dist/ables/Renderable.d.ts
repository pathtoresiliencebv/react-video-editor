import { MoveableManagerInterface, RenderableProps, OnRender, OnRenderEnd, MoveableGroupInterface } from '../types';

declare const _default: {
    readonly name: "renderable";
    readonly props: readonly [];
    readonly events: readonly ["renderStart", "render", "renderEnd", "renderGroupStart", "renderGroup", "renderGroupEnd"];
    readonly dragRelation: "weak";
    readonly dragStart: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => void;
    readonly drag: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => void;
    readonly dragAfter: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => any;
    readonly dragEnd: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => void;
    readonly dragGroupStart: (moveable: MoveableGroupInterface<RenderableProps>, e: any) => void;
    readonly dragGroup: (moveable: MoveableGroupInterface<RenderableProps>, e: any) => void;
    readonly dragGroupEnd: (moveable: MoveableGroupInterface<RenderableProps>, e: any) => void;
    readonly dragControlStart: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => any;
    readonly dragControl: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => any;
    readonly dragControlAfter: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => any;
    readonly dragControlEnd: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => any;
    readonly dragGroupControlStart: (moveable: MoveableGroupInterface<RenderableProps>, e: any) => any;
    readonly dragGroupControl: (moveable: MoveableGroupInterface<RenderableProps>, e: any) => any;
    readonly dragGroupControlEnd: (moveable: MoveableGroupInterface<RenderableProps>, e: any) => any;
    readonly fillDragParams: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => OnRender;
    readonly fillDragEndParams: (moveable: MoveableManagerInterface<RenderableProps>, e: any) => OnRenderEnd;
};
export default _default;
