"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.none = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const remotion_1 = require("remotion");
const NonePresentation = ({ children, presentationDirection, passedProps }) => {
    const style = (0, react_1.useMemo)(() => {
        return {
            ...(presentationDirection === 'entering'
                ? passedProps.enterStyle
                : passedProps.exitStyle),
        };
    }, [passedProps.enterStyle, passedProps.exitStyle, presentationDirection]);
    return (0, jsx_runtime_1.jsx)(remotion_1.AbsoluteFill, { style: style, children: children });
};
/**
 * Wraps the transition in a context so that the progress can be read from the children using a hook.
 * @see [Documentation](https://remotion.dev/docs/transitions/presentations/context)
 * @param {NoneProps} [props] Optional properties to define 'enterStyle' and 'exitStyle'.
 * @returns {TransitionPresentation<NoneProps>} The transition presentation component setup.
 */
const none = (props) => {
    return {
        component: NonePresentation,
        props: props !== null && props !== void 0 ? props : {},
    };
};
exports.none = none;
