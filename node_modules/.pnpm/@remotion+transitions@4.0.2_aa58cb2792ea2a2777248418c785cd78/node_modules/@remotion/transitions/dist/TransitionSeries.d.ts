import type { FC, PropsWithChildren } from 'react';
import type { AbsoluteFillLayout, LayoutAndStyle, SequencePropsWithoutDuration } from 'remotion';
import { NoReactInternals } from 'remotion/no-react';
import type { TransitionSeriesTransitionProps } from './types.js';
declare const TransitionSeriesTransition: <PresentationProps extends Record<string, unknown>>(_props: TransitionSeriesTransitionProps<PresentationProps>) => null;
type LayoutBasedProps = true extends typeof NoReactInternals.ENABLE_V5_BREAKING_CHANGES ? AbsoluteFillLayout : LayoutAndStyle;
type SeriesSequenceProps = PropsWithChildren<{
    readonly durationInFrames: number;
    readonly offset?: number;
    readonly className?: string;
    /**
     * @deprecated For internal use only
     */
    readonly stack?: string;
} & LayoutBasedProps & Pick<SequencePropsWithoutDuration, 'name'>>;
declare const SeriesSequence: ({ children }: SeriesSequenceProps) => import("react/jsx-runtime.js").JSX.Element;
/**
 * @description A React component designed to manage a series of transitions and sequences where each transition may have specific timing and presentation components. It extends the capabilities of `<Sequence>` and is specifically structured to handle transitions that involve entering and exiting sequences.
 * @see [Documentation](https://remotion.dev/docs/transitions/transitionseries)
 * @param {SequencePropsWithoutDuration} props The properties for setting the initial rendering behavior like from, name, etc. It additionally accepts children that are specifically `<TransitionSeries.Sequence>` or `<TransitionSeries.Transition>`.
 * @returns React component that renders the transitions and sequences.
 */
declare const TransitionSeries: FC<SequencePropsWithoutDuration> & {
    Sequence: typeof SeriesSequence;
    Transition: typeof TransitionSeriesTransition;
};
export { TransitionSeries };
