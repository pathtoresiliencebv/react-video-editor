import type { CSSProperties } from 'react';
import type { CompProps } from 'remotion';
import type { AnyZodObject } from 'zod';
import type { ThumbnailMethods } from './player-methods.js';
import type { ErrorFallback, RenderLoading } from './PlayerUI.js';
import type { PropsIfHasProps } from './utils/props-if-has-props.js';
export type ThumbnailProps<Schema extends AnyZodObject, Props extends Record<string, unknown>> = PropsIfHasProps<Schema, Props> & CompProps<Props> & {
    readonly frameToDisplay: number;
    readonly style?: CSSProperties;
    readonly durationInFrames: number;
    readonly compositionWidth: number;
    readonly compositionHeight: number;
    readonly fps: number;
    readonly overflowVisible?: boolean;
    readonly errorFallback?: ErrorFallback;
    readonly renderLoading?: RenderLoading;
    readonly className?: string;
};
export type ThumbnailPropsWithoutZod<Props extends Record<string, unknown>> = ThumbnailProps<AnyZodObject, Props>;
/**
 * @description A component which can be rendered in a regular React App (for example: Next.js, Vite) to display a single frame of a video.
 * @see [Documentation](https://www.remotion.dev/docs/player/thumbnail)
 */
export declare const Thumbnail: <Schema extends AnyZodObject, Props extends Record<string, unknown>>(props: ThumbnailProps<Schema, Props> & import("react").RefAttributes<ThumbnailMethods>) => React.ReactElement | null;
