{"version":3,"file":"opfs-worker-F4RWlqc_.js","sources":["../src/common.ts","../src/opfs-worker.ts"],"sourcesContent":["export interface FileSystemSyncAccessHandle {\n  read: (container: ArrayBuffer, opts: { at: number }) => Promise<number>;\n  write: (\n    data: ArrayBuffer | ArrayBufferView,\n    opts?: { at: number }\n  ) => Promise<number>;\n  flush: () => Promise<void>;\n  close: () => Promise<void>;\n  truncate: (newSize: number) => Promise<void>;\n  getSize: () => Promise<number>;\n}\n\nexport function parsePath(path: string) {\n  if (path === '/') return { parent: null, name: '' };\n\n  const pathArr = path.split('/').filter((s) => s.length > 0);\n  if (pathArr.length === 0) throw Error('Invalid path');\n\n  const name = pathArr[pathArr.length - 1];\n\n  const parent = '/' + pathArr.slice(0, -1).join('/');\n\n  return { name, parent };\n}\n\nexport async function getFSHandle<\n  ISFile extends boolean,\n  ISCreate extends boolean,\n  T = ISFile extends true ? FileSystemFileHandle : FileSystemDirectoryHandle,\n  RT = ISCreate extends true ? T : T | null\n>(\n  path: string,\n  opts: {\n    create?: ISCreate;\n    isFile?: ISFile;\n  }\n): Promise<RT> {\n  const { parent, name } = parsePath(path);\n\n  if (parent == null) return (await navigator.storage.getDirectory()) as RT;\n\n  const dirPaths = parent.split('/').filter((s) => s.length > 0);\n\n  try {\n    let dirHandle = await navigator.storage.getDirectory();\n    for (const p of dirPaths) {\n      dirHandle = await dirHandle.getDirectoryHandle(p, {\n        create: opts.create,\n      });\n    }\n    if (opts.isFile) {\n      return (await dirHandle.getFileHandle(name, {\n        create: opts.create,\n      })) as RT;\n    } else {\n      return (await dirHandle.getDirectoryHandle(name, {\n        create: opts.create,\n      })) as RT;\n    }\n  } catch (err) {\n    if ((err as Error).name === 'NotFoundError') {\n      return null as RT;\n    }\n    throw err;\n  }\n}\n\nexport async function remove(path: string) {\n  const { parent, name } = parsePath(path);\n  if (parent == null) {\n    const root = await navigator.storage.getDirectory();\n    for await (const it of root.keys()) {\n      await root.removeEntry(it, { recursive: true });\n    }\n    return;\n  }\n\n  const dirHandle = (await getFSHandle(parent, {\n    create: false,\n    isFile: false,\n  })) as FileSystemDirectoryHandle | null;\n  if (dirHandle == null) return;\n\n  await dirHandle.removeEntry(name, { recursive: true });\n}\n\nexport function joinPath(p1: string, p2: string) {\n  return `${p1}/${p2}`.replace('//', '/');\n}\n","import { FileSystemSyncAccessHandle, getFSHandle } from './common';\n\nconst fileAccesserMap: Record<number, FileSystemSyncAccessHandle> = {};\n\nself.onmessage = async (e) => {\n  const { evtType, args } = e.data;\n\n  let accessHandle = fileAccesserMap[args.fileId as number];\n\n  try {\n    let returnVal;\n    const trans: Transferable[] = [];\n    if (evtType === 'register') {\n      const fh = await getFSHandle(args.filePath, {\n        create: true,\n        isFile: true,\n      });\n      if (fh == null) throw Error(`not found file: ${args.fileId}`);\n      // @ts-expect-error\n      accessHandle = await fh.createSyncAccessHandle({ mode: args.mode });\n      fileAccesserMap[args.fileId] = accessHandle;\n    } else if (evtType === 'close') {\n      await accessHandle.close();\n      delete fileAccesserMap[args.fileId];\n    } else if (evtType === 'truncate') {\n      await accessHandle.truncate(args.newSize);\n    } else if (evtType === 'write') {\n      const { data, opts } = e.data.args;\n      returnVal = await accessHandle.write(data, opts);\n    } else if (evtType === 'read') {\n      const { offset, size } = e.data.args;\n      const uint8Buf = new Uint8Array(size);\n      const readLen = await accessHandle.read(uint8Buf, { at: offset });\n      const buf = uint8Buf.buffer;\n      returnVal =\n        readLen === size\n          ? buf\n          : // @ts-expect-error transfer support by chrome 114\n            buf.transfer?.(readLen) ?? buf.slice(0, readLen);\n      trans.push(returnVal);\n    } else if (evtType === 'getSize') {\n      returnVal = await accessHandle.getSize();\n    } else if (evtType === 'flush') {\n      await accessHandle.flush();\n    }\n\n    self.postMessage(\n      {\n        evtType: 'callback',\n        cbId: e.data.cbId,\n        returnVal,\n      },\n      // @ts-expect-error\n      trans\n    );\n  } catch (error) {\n    const err = error as Error;\n    self.postMessage({\n      evtType: 'throwError',\n      cbId: e.data.cbId,\n      errMsg: err.name + ': ' + err.message + '\\n' + JSON.stringify(e.data),\n    });\n  }\n};\n"],"names":["parsePath","path","pathArr","s","name","parent","getFSHandle","opts","dirPaths","dirHandle","p","err","fileAccesserMap","e","evtType","args","accessHandle","returnVal","trans","fh","data","offset","size","uint8Buf","readLen","buf","_a","error"],"mappings":"yBAYO,SAASA,EAAUC,EAAc,CACtC,GAAIA,IAAS,IAAK,MAAO,CAAE,OAAQ,KAAM,KAAM,IAEzC,MAAAC,EAAUD,EAAK,MAAM,GAAG,EAAE,OAAQE,GAAMA,EAAE,OAAS,CAAC,EAC1D,GAAID,EAAQ,SAAW,EAAG,MAAM,MAAM,cAAc,EAEpD,MAAME,EAAOF,EAAQA,EAAQ,OAAS,CAAC,EAEjCG,EAAS,IAAMH,EAAQ,MAAM,EAAG,EAAE,EAAE,KAAK,GAAG,EAE3C,MAAA,CAAE,KAAAE,EAAM,OAAAC,EACjB,CAEsB,eAAAC,EAMpBL,EACAM,EAIa,CACb,KAAM,CAAE,OAAAF,EAAQ,KAAAD,CAAK,EAAIJ,EAAUC,CAAI,EAEvC,GAAII,GAAU,KAAM,OAAQ,MAAM,UAAU,QAAQ,eAE9C,MAAAG,EAAWH,EAAO,MAAM,GAAG,EAAE,OAAQF,GAAMA,EAAE,OAAS,CAAC,EAEzD,GAAA,CACF,IAAIM,EAAY,MAAM,UAAU,QAAQ,aAAa,EACrD,UAAWC,KAAKF,EACFC,EAAA,MAAMA,EAAU,mBAAmBC,EAAG,CAChD,OAAQH,EAAK,MAAA,CACd,EAEH,GAAIA,EAAK,OACC,OAAA,MAAME,EAAU,cAAcL,EAAM,CAC1C,OAAQG,EAAK,MAAA,CACd,QAMII,EAAK,CACP,GAAAA,EAAc,OAAS,gBACnB,OAAA,KAEH,MAAAA,CACR,CACF,CC/DA,MAAMC,EAA8D,CAAA,EAEpE,KAAK,UAAY,MAAOC,GAAM,OAC5B,KAAM,CAAE,QAAAC,EAAS,KAAAC,GAASF,EAAE,KAExB,IAAAG,EAAeJ,EAAgBG,EAAK,MAAgB,EAEpD,GAAA,CACE,IAAAE,EACJ,MAAMC,EAAwB,CAAA,EAC9B,GAAIJ,IAAY,WAAY,CAC1B,MAAMK,EAAK,MAAMb,EAAYS,EAAK,SAAU,CAC1C,OAAQ,GACR,OAAQ,EAAA,CACT,EACD,GAAII,GAAM,KAAM,MAAM,MAAM,mBAAmBJ,EAAK,MAAM,EAAE,EAE5DC,EAAe,MAAMG,EAAG,uBAAuB,CAAE,KAAMJ,EAAK,KAAM,EAClDH,EAAAG,EAAK,MAAM,EAAIC,CAAA,SACtBF,IAAY,QACrB,MAAME,EAAa,QACZ,OAAAJ,EAAgBG,EAAK,MAAM,UACzBD,IAAY,WACf,MAAAE,EAAa,SAASD,EAAK,OAAO,UAC/BD,IAAY,QAAS,CAC9B,KAAM,CAAE,KAAAM,EAAM,KAAAb,CAAK,EAAIM,EAAE,KAAK,KAC9BI,EAAY,MAAMD,EAAa,MAAMI,EAAMb,CAAI,CAAA,SACtCO,IAAY,OAAQ,CAC7B,KAAM,CAAE,OAAAO,EAAQ,KAAAC,CAAK,EAAIT,EAAE,KAAK,KAC1BU,EAAW,IAAI,WAAWD,CAAI,EAC9BE,EAAU,MAAMR,EAAa,KAAKO,EAAU,CAAE,GAAIF,EAAQ,EAC1DI,EAAMF,EAAS,OACrBN,EACEO,IAAYF,EACRG,IAEAC,EAAAD,EAAI,WAAJ,YAAAC,EAAA,KAAAD,EAAeD,KAAYC,EAAI,MAAM,EAAGD,CAAO,EACrDN,EAAM,KAAKD,CAAS,CAAA,MACXH,IAAY,UACTG,EAAA,MAAMD,EAAa,UACtBF,IAAY,SACrB,MAAME,EAAa,QAGhB,KAAA,YACH,CACE,QAAS,WACT,KAAMH,EAAE,KAAK,KACb,UAAAI,CACF,EAEAC,CAAA,QAEKS,EAAO,CACd,MAAMhB,EAAMgB,EACZ,KAAK,YAAY,CACf,QAAS,aACT,KAAMd,EAAE,KAAK,KACb,OAAQF,EAAI,KAAO,KAAOA,EAAI,QAAU;AAAA,EAAO,KAAK,UAAUE,EAAE,IAAI,CAAA,CACrE,CACH,CACF"}